---
// Import√©r CSS
import "./src/pages/generel.css";

// Defin√©r props i Astro'
const { image, targetDate } = Astro.props;
---

<div class="hero">
  <iframe
    src="https://player.vimeo.com/video/876374529?loop=1&autoplay=1&title=0&byline=0&portrait=0&background=1"
    frameborder="0"
    allow="autoplay; fullscreen"
    allowfullscreen
    class="background-image"></iframe>

  <div class="overlay">
    <div class="hero-content">
      <img
        src="./src/assets/titel.svg"
        alt="Helsing√∏r Kulturnat"
        class="titel"
      />
      <div class="countdown-tal">
        <div><span id="days"></span></div>
        <div><span id="hours"></span></div>
        <div><span id="minutes"></span></div>
      </div>
      <div class="countdown">
        <div>DAGE</div>
        <div>TIMER</div>
        <div>MIN</div>
      </div>
      <button class="cta" id="save-date">GEM DATOEN</button>
    </div>
    <img src="src/assets/baby.svg" alt="Helsing√∏r Kulturnat" class="baby" />

    <img
      class="frame"
      src="/src/assets/ramme-desk.svg"
      alt="frame"
      style="width: 100%; max-width: 1200px; height: auto;"
    />
    <img
      class="frame-mobil"
      src="/src/assets/ramme-mobil.svg"
      alt="frame"
      style="width: 90%; max-width: 1200px; height: auto;"
    />
  </div>
</div>

<!-- Noter til scriptet:
DOMContentLoaded Event:

Scriptet venter p√•, at hele DOM'en er indl√¶st, f√∏r det k√∏rer. Dette sikrer, at alle elementer er tilg√¶ngelige i DOM'en, n√•r scriptet k√∏rer.
Find Save Date Button:

Scriptet fors√∏ger at finde knappen med id save-date. Hvis knappen ikke findes, logges en fejlmeddelelse til konsollen, og scriptet afsluttes.
Add Click Event Listener:

Hvis knappen findes, tilf√∏jes en klik-begivenhedslytter til knappen. N√•r knappen klikkes, udf√∏res funktionen, der opretter og downloader kalenderbegivenheden.
Create Calendar Event:

Kalenderbegivenheden oprettes som en streng i iCalendar-format. Denne streng indeholder begivenhedsoplysninger som titel, starttidspunkt, sluttidspunkt, placering og beskrivelse.
Create and Download Blob:

En Blob oprettes fra kalenderbegivenhedsstrengen med MIME-typen text/calendar.
En URL til Blob'en oprettes ved hj√¶lp af URL.createObjectURL.
Et midlertidigt link-element oprettes, og dets href-attribut s√¶ttes til Blob-URL'en. download-attributten s√¶ttes til filnavnet helsingor-kulturnat.ics.
Linket tilf√∏jes til dokumentet, klikkes p√• (for at starte download), og fjernes derefter fra dokumentet.
Error Handling:

Hvis der opst√•r en fejl under oprettelsen eller download af kalenderbegivenheden, logges en fejlmeddelelse til konsollen. -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const saveDateButton = document.getElementById("save-date");
    if (!saveDateButton) {
      console.error("Element with id 'save-date' not found.");
      return;
    }

    saveDateButton.addEventListener("click", function () {
      const event = [
        "BEGIN:VCALENDAR",
        "VERSION:2.0",
        "BEGIN:VEVENT",
        "SUMMARY:Helsing√∏r Kulturnat",
        "DTSTART:20250415T120000Z",
        "DTEND:20250415T130000Z",
        "LOCATION:Helsing√∏r, Danmark",
        "DESCRIPTION:Kom til Helsing√∏r Kulturnat! üéâ",
        "END:VEVENT",
        "END:VCALENDAR",
      ].join("\n");

      try {
        const blob = new Blob([event], { type: "text/calendar" });
        const url = URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.href = url;
        a.download = "helsingor-kulturnat.ics";
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
      } catch (error) {
        console.error("Error creating or downloading calendar event:", error);
      }
    });

    // Countdown timer

    const targetDate = new Date("2025-09-15T12:00:00Z").getTime();

    function updateCountdown() {
      const now = new Date().getTime();
      const distance = targetDate - now;

      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor(
        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),
      );
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));

      const daysElement = document.getElementById("days");
      const hoursElement = document.getElementById("hours");
      const minutesElement = document.getElementById("minutes");

      if (daysElement && hoursElement && minutesElement) {
        daysElement.innerText = days.toString();
        hoursElement.innerText = hours.toString();
        minutesElement.innerText = minutes.toString();
      }

      if (distance < 0) {
        clearInterval(countdownInterval);
        if (daysElement && hoursElement && minutesElement) {
          daysElement.innerText = "0";
          hoursElement.innerText = "0";
          minutesElement.innerText = "0";
        }
      }
    }

    const countdownInterval = setInterval(updateCountdown, 1000);
    updateCountdown(); // Initial call to set the countdown immediately
  });
</script>

<style>
  .hero {
    position: relative;
    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
  }

  .background-image {
    position: relative; /* Positioner iframe over hele sk√¶rmen */
    top: 0;
    left: 0;
    width: 100%; /* Fylder hele bredden */
    height: 100%; /* Fylder hele h√∏jden */
    object-fit: cover; /* Fylder sk√¶rmen uden at √¶ndre aspektforholdet */
    scale: 1.3;
    overflow-x: hidden;
  }

  iframe {
    background-image: url("src/assets/load.webp");
    background-repeat: no-repeat;
    background-size: cover;
  }

  .overlay {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    color: black;
    z-index: 10;
  }

  .countdown {
    color: #28282b;
    display: flex;
    gap: 110px;
    font-size: 2cqw;
    font-weight: bold;
    font-family: "neue_haas_grotesk_display65Md";
    position: absolute;
    bottom: 60px;
    left: 90px;
    z-index: 1000;
  }
  .countdown-tal {
    color: #28282b;
    display: flex;
    gap: 80px;
    font-size: 6cqw;

    font-weight: bold;
    position: absolute;
    bottom: 80px;
    left: 60px;
    z-index: 1000;
  }
  .baby {
    width: auto;
    position: absolute;
    bottom: 50px;
    right: 70px;
    z-index: 10;
  }
  .cta {
    color: #28282b;
    font-family: "Anton", sans-serif;

    z-index: 1000;
    position: absolute;
    font-size: 2.2rem;
    font-weight: bold;
    font-family:;
    bottom: 60px;
    right: 180px;
    width: 400px;
    height: auto;
    background-color: rgba(0, 0, 0, 0);
    border-color: rgba(0, 0, 0, 0);
  }

  .frame {
    margin-top: 0px;
    z-index: 50;
  }
  .frame-mobil {
    margin-top: 0px;
    z-index: 50;
    display: none;
  }

  .titel {
    z-index: 1000;
    position: absolute;
    top: 30px;
    left: 30px;
    width: 30%;
    height: auto;
  }

  @media (max-width: 800px) {
    .countdown {
      gap: 67px;
      font-size: 4cqw;

      font-weight: bold;
      position: absolute;
      bottom: 30px;
      left: 50px;
    }
    .countdown-tal {
      gap: 70px;
      font-size: 8cqw;
      font-weight: bold;
      position: absolute;
      bottom: 60px;
      left: 50px;
    }
    .cta {
      font-size: 1.5rem;
      font-weight: bold;
      bottom: 130px;
      right: 170px;
      width: 400px;
      height: auto;
    }
    .frame {
      display: none;
    }
    .frame-mobil {
      display: block;
    }
    .titel {
      z-index: 1000;
      position: absolute;
      top: 140px;
      left: 60px;
      width: 40%;
      height: auto;
    }
    .baby {
      width: 60px;
      position: absolute;
      bottom: 50px;
      right: 50px;
      z-index: 10;
    }
    .hero-content {
      margin-top: 80px;
    }
  }
</style>
